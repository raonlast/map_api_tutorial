<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, 
      initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no">
    <title>My First Map</title>
    <link rel="stylesheet" href="/stylesheets/style.css">
    <script type="text/javascript" 
      src="https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=ht99b1spdz">
    </script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js" 
      integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" 
      crossorigin="anonymous">
    </script>
    <script type="text/javascript" 
      src="//dapi.kakao.com/v2/maps/sdk.js?appkey=52973e6266e47ad1d9de8aedd04f57bd&libraries=services">
    </script>
  </head>

  
  <body>
    <div id="navbar">지도</div>
    <div id="search">
      <input id="search_input" placeholder="목적지를 입력해주세요">
      <button id="search_button">검색</button>
    </div>
    <div id="current">현재 위치</div>
    <div id="map" style="width:100%;height:100vh;"></div>

    <script type="text/javascript" src="/data/data.js" ></script>

    <script>
      var mapOptions = {
        center: new naver.maps.LatLng(37.55216322595447, 126.99067953133044),
        zoom: 12
      };

      var map = new naver.maps.Map('map', mapOptions);

      let infoWindow = new naver.maps.InfoWindow({zIndex: 1});
      
      var markerList = [];
      var infowindowList = [];
      let count;

      // for (var i in data) {
      //   var target = data[i];

      //   var latlng = new naver.maps.LatLng(target.lat, target.lng);

      //   marker = new naver.maps.Marker({
      //     map: map,
      //     position: latlng,
      //     icon: {
      //       content: "<div class='marker'></div>",
      //       anchor: new naver.maps.Point(12, 12)
      //     },
      //   });
      

      //   var content = `<div class='infowindow_wrap'>
      //     <div class='infowindow_title'>${target.title}</div>
      //     <div class='infowindow_content'>${target.content}</div>
      //     <div class='infowindow_date'>${target.date}</div>
      //   </div>`


      //   var infowindow = new naver.maps.InfoWindow({
      //     content: content,
      //     backgroundColor: "#00ff000000",
      //     borderColor: "#00ff000000",
      //     anchorSize: new naver.maps.Size(0, 0)
      //   })


      //   markerList.push(marker);
      //   infowindowList.push(infowindow);

      // }
      

      // for (var i = 0, ii = markerList.length; i < ii; i++) {
      //   naver.maps.Event.addListener(map, "click", ClicMap(i));
      //   naver.maps.Event.addListener(markerList[i], "click", getClickHandler(i));
      // }


      // function ClicMap(i) {
      //   return function() {
      //     var infowindow = infowindowList[i];
      //     infowindow.close()
      //   }
      // }


      // function getClickHandler(i) {
      //   return function() {
      //     var marker = markerList[i];
      //     var infowindow = infowindowList[i];
      //     if (infowindow.getMap()) {
      //       infowindow.close();
            
      //     } else {
      //       infowindow.open(map, marker);
      //     }
      //   }
      // }




    

      function onErrorGeolocation() {
        var center = map.getCenter();

        infowindow.setContent('<div style="padding:20px;">' + 
          '<h5 style="margin-bottom:5px;color:#f00;">Geolocation failed!</h5>'+ 
          "latitude: "+ center.lat() +"<br />longitude: "+ center.lng() +'</div>');

        infowindow.open(map, center);
      }


      let currentUse = true;

      

      $('#current').click(() => {
        if(navigator.geolocation) {
          navigator.geolocation.getCurrentPosition((position) => {

            const lat = position.coords.latitude;
            const lng = position.coords.longitude;
            
            var location = new naver.maps.LatLng(lat, lng);

            

            map.setCenter(location);
            map.setZoom(14);

            if(currentUse) {
              marker = new naver.maps.Marker({
                map: map,
                position: location,
                icon: {
                  content: '<img class="pulse" draggable="false" unselectable="on" src="https://myfirstmap.s3.ap-northeast-2.amazonaws.com/circle.png">',
                  anchor: new naver.maps.Point(11, 11)
                },
              });

              currentUse = false;
            }

            
          });
          
        } else {
          alert("위치 정보 사용 불가능");
        }
      })

      let ps = new kakao.maps.services.Places();
      let search_arr = [];

    
    

      $("#search_input").on("keydown", function(event) {
        if(event.keyCode === 13) {
          let content = $(this).val();   // this => search_input
          ps.keywordSearch(content, placeSearchCB);
        }
      })


      $("#search_button").on("click", function(event) {
        let content = $("#search_input").val();
        console.log('click event');
        ps.keywordSearch(content, placeSearchCB);
      })


      function placeSearchCB(data, status, pagination) {
        // console.log(data);

        if (status === kakao.maps.services.Status.OK) {

          if (search_arr.length > 0) {
            search_arr.forEach((element) => {
              element.setMap(null);
            })

            search_arr.length = 0;
          }
          
          for(var a = 0; a < data.length; a++) {
            displayMarker(data[a]);

          }

          let panTo_latlng = new naver.maps.LatLng(data[0].y, data[0].x);

          map.setZoom(15);
          map.panTo(panTo_latlng);
      

        } else {
          alert("검색 결과가 없습니다.");
        }

      }


      function displayMarker(place) {
        console.log(place);
        const lat = place.y;
        const lng = place.x;
        const latlng = new naver.maps.LatLng(lat, lng);
        marker = new naver.maps.Marker({
          map: map,
          position: latlng
        })
        search_arr.push(marker);

        naver.maps.Event.addListener(marker, "click", () => {
          infoWindow.setContent('<div style="padding:5px;font-size:12px;">' + place.place_name + '</div>');
          infoWindow.open(map, marker);
        });
      }





      var CustomOverlay = function(options) {
        this._element = $()

        this.setPosition(options.position);
        this.setMap(options.map || null);
      };

      CustomOverlay.prototype = new naver.maps.OverlayView();
      CustomOverlay.prototype.constructor = CustomOverlay;

      CustomOverlay.prototype.setPosition = function(position) {
          this._position = position;
          this.draw();
      };

      CustomOverlay.prototype.getPosition = function() {
          return this._position;
      };

      CustomOverlay.prototype.onAdd = function() {
          var overlayLayer = this.getPanes().overlayLayer;

          this._element.appendTo(overlayLayer);
      };

      CustomOverlay.prototype.draw = function() {
          if (!this.getMap()) {
              return;
          }

          var projection = this.getProjection(),
              position = this.getPosition(),
              pixelPosition = projection.fromCoordToOffset(position);

          this._element.css('left', pixelPosition.x);
          this._element.css('top', pixelPosition.y);
      };

      CustomOverlay.prototype.onRemove = function() {
          var overlayLayer = this.getPanes().overlayLayer;

          this._element.remove();
          this._element.off();
      };

      // var position = new naver.maps.LatLng(37.3849483, 127.1229117);
      // var map = new naver.maps.Map("map", {
      //     center: position,
      //     zoom: 19
      // });
      // var overlay = new CustomOverlay({
      //     map: map,
      //     position: position
      // });



    </script>
  </body>
</html>